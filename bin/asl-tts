#!/usr/bin/bash
#
# Copyright 2024 AllStarLink Inc., Jason McCormick N8EI
#
# Distributed under the MIT License
# https://opensource.org/license/mit
#

ONNX_FILES="/var/lib/piper-tts"
PIPER="/usr/bin/piper"

if [ ${USER} != "root" ] && [ ${USER} != "asterisk" ]; then
	echo "Script must be run as root or asterisk"
	exit 1
fi

function usage(){
	echo "Usage: $0 -n {NODE} -t \"TEXT \" [ -f FILE ]" 1>&2
	exit 1
}

while getopts "f:n:t:v:" opt; do
	case ${opt} in
		f)  FILE="${OPTARG}" ;;
		n)	NODE="${OPTARG}" ;;
		t)	TEXT="${OPTARG}" ;;
		v)  VOICE="${OPTARG}" ;;
		*)	usage ;;
	esac
done
shift $((OPTIND-1))

if [ -z "${NODE}" ] || [ ${NODE} -lt 1 ]; then
	echo "-n {NODE} must be a number greater than 0" 1>&2
	exit
fi

if [ -z "${FILE}" ]; then
	MODE="SPEAK"
	test ! -d /tmp/asl-tts && mkdir /tmp/asl-tts
	FILE=$(mktemp /tmp/asl-tts/XXXXXXXX)
else
	MODE="SAVE"
fi

if [ -z "${VOICE}" ]; then
	VOICE=en_US-amy-low.onnx
fi

if [ ! -f "${ONNX_FILES}/${VOICE}" ]; then
	echo "Voice not found: ${ONNX_FILES}/${VOICE}"
	exit 1
fi

if [ ! -f "${ONNX_FILES}/${VOICE}.json" ]; then
	echo "Voice not found: ${ONNX_FILES}/${VOICE}"
	exit 1
fi

if [ -z "${TEXT}" ]; then
	echo "Missing or zero-length text in -t"
	exit 1
fi

LOGFILE=$(mktemp)
EXITVAL=0
echo ${TEXT} | ${PIPER} --model ${ONNX_FILES}/${VOICE} --output_file ${FILE} > ${LOGFILE} 2>&1
[ "$?" != "0" ] && EXITVAL=1
sox -V ${FILE} -r 8000 -c 1 -t ul ${FILE}.ul 2> ${LOGFILE}
[ "$?" != "0" ] && EXITVAL=1

if [ ${MODE} == "SPEAK" ]; then
	asterisk -x "rpt localplay ${NODE} ${FILE}"
fi

rm ${FILE}

if [ "${EXITVAL}" == "1" ]; then
	cat ${LOGFILE}
	echo "\n\nERROR: SEE ABOVE OUTPUT"
	rm -f ${LOGFILE}
fi

rm -f ${LOGFILE}
exit 0

